<div id="graphTitle">Délai d'arrivée des mails en secondes</div>

<div class="graph" id="graphGeneral"></div>

<%
   # the median data
   median_data = []

   # all the max data
   max_data_full = []

   # a max data per account
   max_data_per_account = Hash.new { |hash, key| hash[key]= [] }

   # hash original_message_id => original_message
   original_messages_by_id = {}

   @original_messages.each do |original_message_hash|
     original_message = original_message_hash[:original_messages]
     date = Integer(Sequel.database_timezone.utc_to_local(original_message.sent_at).to_f) * 1000
     if original_message.median_time_to_receive
       median_data << [date, original_message.median_time_to_receive]
     end
     slower_received_message = original_message_hash[:slower_received_message]
     if slower_received_message
       max_data_full << [date, slower_received_message.delay]
       max_data_per_account[slower_received_message.account_id] << [date, slower_received_message.delay]
     end
     original_messages_by_id[original_message.id] = original_message
   end

   median_data.sort! { |x, y| x[0] <=> y[0] }
   max_data_full.sort! { |x, y| x[0] <=> y[0] }
   max_data_per_account.each_value { |list| list.sort! { |x, y| x[0] <=> y[0] } }

   # hash account id => account name
   accounts_by_id = {}

   @accounts.each do |account|
     accounts_by_id[account.id] = account.name
   end

   messages_ids = original_messages_by_id.keys
   message_min = messages_ids.min
   message_max = messages_ids.max

   # hash account name => array of [message sent time, message delay]
   messages = Hash.new { |hash, key| hash[key] = [] }
   unless original_messages_by_id.empty?
     ReceivedMessage.where(:original_message_id => message_min..message_max).order(:original_message_id.asc).each do |received_message|
       messages[received_message.account_id] << [(Integer(Sequel.database_timezone.utc_to_local(original_messages_by_id[received_message.original_message_id].sent_at).to_f) * 1000), received_message.delay]
     end
   end


   dataset_maximum = []
   dataset_maximum << {:label => 'Maximum', :data => max_data_full, :line => {:lineWidth => 1}, :color => "rgb(200, 200, 200)", :points => {:show => false}, :shadowSize => 0}

   color = 2

   max_data_per_account.each_pair do |account_id, data|
     dataset_maximum << {:label => "Max chez #{accounts_by_id[account_id]}", :data => data, :color => color += 1, :lines => {:show => false}, :shadowSize => 0}
   end

   dataset = {}
   dataset['Médiane'] = {:label => 'Médiane', :data => median_data, :line => {:lineWidth => 1}, :color => "rgb(150, 150, 150)", :points => {:show => false}, :shadowSize => 0}
   messages.each_pair do |index, value|
     label = accounts_by_id[index]
     dataset[label] = {:label => label, :data => value, :color => color, :shadowSize => 0}
     color += 1
   end

%>

<fieldset>
  <% if @show_days %>
    <p><a href="#" onclick="displayDateGeneral(null); return false;">Mois entier</a>
      <% current_day = original_messages_by_id[message_min].sent_at %>
      <% while current_day < (original_messages_by_id[message_max].sent_at + 1) do %>
        <%= "<a href=\"#\" onclick=\"displayDateGeneral(Date.UTC(#{current_day.strftime("%Y, (%m-1), %d")}).valueOf());return false;\">#{current_day.strftime("%d")}</a>" %>
        <% current_day += 1 %>
      <% end %>
    </p>
  <% end %>

  <span class="plotSpan"><input class="plotCheck" type="checkbox" name="Maximum" checked="checked"> <label>Maximum</label></span>
  <span class="plotSpan"><input class="plotCheck" type="checkbox" name="Médiane" checked="checked"> <label>Médiane<a href="http://fr.wikipedia.org/wiki/Médiane_(centre)">?</a></label></span>
  <% @accounts.each do |account| %>
    <span class="plotSpan"><%= "<input class=\"plotCheck\" type=\"checkbox\" name=\"#{account.name}\"> <label><a href=\"/account/#{account.name}\">#{account.name}</a> <span class=\"#{account.last_connection_successful ? 'messageOK">OK' : 'messageKO>KO'}</span></label>" %></span>
  <% end %>
</fieldset>

<script>
  <%= "var datasetMaximum = #{dataset_maximum.to_json};"%>
  <%= "var dataset = #{dataset.to_json};"%>
  var current_dataset = datasetMaximum.concat(dataset[0]);
  <% if @show_days %>
  <% if params[:day] %>
  var showPoints = true;
  <%= "var minDisplayed = Date.UTC(#{original_messages_by_id[message_min].sent_at.strftime("%Y, (%m-1)")}, #{params[:day]}).valueOf();" %>
  var maxDisplayed = minDisplayed + (24 * 60 * 60 * 1000);
  <% else %>
  var showPoints = false;
  var minDisplayed = null;
  var maxDisplayed = null;
  <% end %>
  <% else %>
  var showPoints = true;
  var minDisplayed = null;
  var maxDisplayed = null;
  <% end %>

  plotGeneral();

</script>